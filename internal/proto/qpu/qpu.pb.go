// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.4
// source: qpu.proto

package qpu

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AttributePredicate_PredicateType int32

const (
	// Used to implement the SQL 'IS NULL'.
	AttributePredicate_ISNULL AttributePredicate_PredicateType = 0
	// Used to implement the SQL 'IS NOT NULL'
	AttributePredicate_ISNOTNULL AttributePredicate_PredicateType = 1
	// Represents the >, <, >=, <= operators
	AttributePredicate_RANGE AttributePredicate_PredicateType = 2
	// Represents the = operator
	AttributePredicate_EQ AttributePredicate_PredicateType = 3
)

// Enum value maps for AttributePredicate_PredicateType.
var (
	AttributePredicate_PredicateType_name = map[int32]string{
		0: "ISNULL",
		1: "ISNOTNULL",
		2: "RANGE",
		3: "EQ",
	}
	AttributePredicate_PredicateType_value = map[string]int32{
		"ISNULL":    0,
		"ISNOTNULL": 1,
		"RANGE":     2,
		"EQ":        3,
	}
)

func (x AttributePredicate_PredicateType) Enum() *AttributePredicate_PredicateType {
	p := new(AttributePredicate_PredicateType)
	*p = x
	return p
}

func (x AttributePredicate_PredicateType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AttributePredicate_PredicateType) Descriptor() protoreflect.EnumDescriptor {
	return file_qpu_proto_enumTypes[0].Descriptor()
}

func (AttributePredicate_PredicateType) Type() protoreflect.EnumType {
	return &file_qpu_proto_enumTypes[0]
}

func (x AttributePredicate_PredicateType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AttributePredicate_PredicateType.Descriptor instead.
func (AttributePredicate_PredicateType) EnumDescriptor() ([]byte, []int) {
	return file_qpu_proto_rawDescGZIP(), []int{5, 0}
}

type SnapshotTime_SnapshotTimeType int32

const (
	// Keyword used to refer to for the most recent snapshot if we don't know
	// the actual timestamp value.
	SnapshotTime_LATEST SnapshotTime_SnapshotTimeType = 0
	// Keyword used to refer to the earliest snapshot in the system.
	SnapshotTime_ZERO SnapshotTime_SnapshotTimeType = 1
	// Keyword used to refer to a timestamp that is always greater than any
	// other timestamp
	// Used to implement long-lived queries.
	// Results in a stream that stays open indefinitely.
	SnapshotTime_INF SnapshotTime_SnapshotTimeType = 2
	// Keyword used to signify that this SnapshotTime has an actual value.
	SnapshotTime_VECTORCLOCK SnapshotTime_SnapshotTimeType = 3
)

// Enum value maps for SnapshotTime_SnapshotTimeType.
var (
	SnapshotTime_SnapshotTimeType_name = map[int32]string{
		0: "LATEST",
		1: "ZERO",
		2: "INF",
		3: "VECTORCLOCK",
	}
	SnapshotTime_SnapshotTimeType_value = map[string]int32{
		"LATEST":      0,
		"ZERO":        1,
		"INF":         2,
		"VECTORCLOCK": 3,
	}
)

func (x SnapshotTime_SnapshotTimeType) Enum() *SnapshotTime_SnapshotTimeType {
	p := new(SnapshotTime_SnapshotTimeType)
	*p = x
	return p
}

func (x SnapshotTime_SnapshotTimeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SnapshotTime_SnapshotTimeType) Descriptor() protoreflect.EnumDescriptor {
	return file_qpu_proto_enumTypes[1].Descriptor()
}

func (SnapshotTime_SnapshotTimeType) Type() protoreflect.EnumType {
	return &file_qpu_proto_enumTypes[1]
}

func (x SnapshotTime_SnapshotTimeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SnapshotTime_SnapshotTimeType.Descriptor instead.
func (SnapshotTime_SnapshotTimeType) EnumDescriptor() ([]byte, []int) {
	return file_qpu_proto_rawDescGZIP(), []int{7, 0}
}

// The important part of every stream record.
type LogOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ObjectId string `protobuf:"bytes,1,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	// Bucket/Table
	// TODO: use a single term through the codebase
	Bucket    string       `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Timestamp *Vectorclock `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Payload   *Payload     `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *LogOperation) Reset() {
	*x = LogOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qpu_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogOperation) ProtoMessage() {}

func (x *LogOperation) ProtoReflect() protoreflect.Message {
	mi := &file_qpu_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogOperation.ProtoReflect.Descriptor instead.
func (*LogOperation) Descriptor() ([]byte, []int) {
	return file_qpu_proto_rawDescGZIP(), []int{0}
}

func (x *LogOperation) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *LogOperation) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *LogOperation) GetTimestamp() *Vectorclock {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *LogOperation) GetPayload() *Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Val:
	//	*Payload_State
	//	*Payload_Delta
	Val isPayload_Val `protobuf_oneof:"val"`
}

func (x *Payload) Reset() {
	*x = Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qpu_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload) ProtoMessage() {}

func (x *Payload) ProtoReflect() protoreflect.Message {
	mi := &file_qpu_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload.ProtoReflect.Descriptor instead.
func (*Payload) Descriptor() ([]byte, []int) {
	return file_qpu_proto_rawDescGZIP(), []int{1}
}

func (m *Payload) GetVal() isPayload_Val {
	if m != nil {
		return m.Val
	}
	return nil
}

func (x *Payload) GetState() *ObjectState {
	if x, ok := x.GetVal().(*Payload_State); ok {
		return x.State
	}
	return nil
}

func (x *Payload) GetDelta() *Payload_StateDelta {
	if x, ok := x.GetVal().(*Payload_Delta); ok {
		return x.Delta
	}
	return nil
}

type isPayload_Val interface {
	isPayload_Val()
}

type Payload_State struct {
	State *ObjectState `protobuf:"bytes,1,opt,name=state,proto3,oneof"`
}

type Payload_Delta struct {
	Delta *Payload_StateDelta `protobuf:"bytes,2,opt,name=delta,proto3,oneof"`
}

func (*Payload_State) isPayload_Val() {}

func (*Payload_Delta) isPayload_Val() {}

type ObjectState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Data model: a data item is a primary key (object_id) + a set of attributes.
	// An attribute is a key value pair (attrKey, attrValue)
	Attributes map[string]*Value `protobuf:"bytes,1,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ObjectState) Reset() {
	*x = ObjectState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qpu_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectState) ProtoMessage() {}

func (x *ObjectState) ProtoReflect() protoreflect.Message {
	mi := &file_qpu_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectState.ProtoReflect.Descriptor instead.
func (*ObjectState) Descriptor() ([]byte, []int) {
	return file_qpu_proto_rawDescGZIP(), []int{2}
}

func (x *ObjectState) GetAttributes() map[string]*Value {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type Attribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AttrKey string `protobuf:"bytes,1,opt,name=attr_key,json=attrKey,proto3" json:"attr_key,omitempty"`
	Value   *Value `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Attribute) Reset() {
	*x = Attribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qpu_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attribute) ProtoMessage() {}

func (x *Attribute) ProtoReflect() protoreflect.Message {
	mi := &file_qpu_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attribute.ProtoReflect.Descriptor instead.
func (*Attribute) Descriptor() ([]byte, []int) {
	return file_qpu_proto_rawDescGZIP(), []int{3}
}

func (x *Attribute) GetAttrKey() string {
	if x != nil {
		return x.AttrKey
	}
	return ""
}

func (x *Attribute) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Val:
	//	*Value_Str
	//	*Value_Int
	//	*Value_Flt
	Val isValue_Val `protobuf_oneof:"val"`
}

func (x *Value) Reset() {
	*x = Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qpu_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_qpu_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_qpu_proto_rawDescGZIP(), []int{4}
}

func (m *Value) GetVal() isValue_Val {
	if m != nil {
		return m.Val
	}
	return nil
}

func (x *Value) GetStr() string {
	if x, ok := x.GetVal().(*Value_Str); ok {
		return x.Str
	}
	return ""
}

func (x *Value) GetInt() int32 {
	if x, ok := x.GetVal().(*Value_Int); ok {
		return x.Int
	}
	return 0
}

func (x *Value) GetFlt() float64 {
	if x, ok := x.GetVal().(*Value_Flt); ok {
		return x.Flt
	}
	return 0
}

type isValue_Val interface {
	isValue_Val()
}

type Value_Str struct {
	Str string `protobuf:"bytes,1,opt,name=str,proto3,oneof"`
}

type Value_Int struct {
	Int int32 `protobuf:"varint,2,opt,name=int,proto3,oneof"`
}

type Value_Flt struct {
	Flt float64 `protobuf:"fixed64,3,opt,name=flt,proto3,oneof"`
}

func (*Value_Str) isValue_Val() {}

func (*Value_Int) isValue_Val() {}

func (*Value_Flt) isValue_Val() {}

type AttributePredicate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attr *Attribute                       `protobuf:"bytes,1,opt,name=attr,proto3" json:"attr,omitempty"`
	Type AttributePredicate_PredicateType `protobuf:"varint,2,opt,name=type,proto3,enum=qpu.AttributePredicate_PredicateType" json:"type,omitempty"`
	// Lower bound.
	Lbound *Value `protobuf:"bytes,3,opt,name=lbound,proto3" json:"lbound,omitempty"`
	// Upper bound.
	Ubound *Value `protobuf:"bytes,4,opt,name=ubound,proto3" json:"ubound,omitempty"`
}

func (x *AttributePredicate) Reset() {
	*x = AttributePredicate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qpu_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttributePredicate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributePredicate) ProtoMessage() {}

func (x *AttributePredicate) ProtoReflect() protoreflect.Message {
	mi := &file_qpu_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributePredicate.ProtoReflect.Descriptor instead.
func (*AttributePredicate) Descriptor() ([]byte, []int) {
	return file_qpu_proto_rawDescGZIP(), []int{5}
}

func (x *AttributePredicate) GetAttr() *Attribute {
	if x != nil {
		return x.Attr
	}
	return nil
}

func (x *AttributePredicate) GetType() AttributePredicate_PredicateType {
	if x != nil {
		return x.Type
	}
	return AttributePredicate_ISNULL
}

func (x *AttributePredicate) GetLbound() *Value {
	if x != nil {
		return x.Lbound
	}
	return nil
}

func (x *AttributePredicate) GetUbound() *Value {
	if x != nil {
		return x.Ubound
	}
	return nil
}

type SnapshotTimePredicate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lbound *SnapshotTime `protobuf:"bytes,1,opt,name=lbound,proto3" json:"lbound,omitempty"`
	Ubound *SnapshotTime `protobuf:"bytes,2,opt,name=ubound,proto3" json:"ubound,omitempty"`
}

func (x *SnapshotTimePredicate) Reset() {
	*x = SnapshotTimePredicate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qpu_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotTimePredicate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotTimePredicate) ProtoMessage() {}

func (x *SnapshotTimePredicate) ProtoReflect() protoreflect.Message {
	mi := &file_qpu_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotTimePredicate.ProtoReflect.Descriptor instead.
func (*SnapshotTimePredicate) Descriptor() ([]byte, []int) {
	return file_qpu_proto_rawDescGZIP(), []int{6}
}

func (x *SnapshotTimePredicate) GetLbound() *SnapshotTime {
	if x != nil {
		return x.Lbound
	}
	return nil
}

func (x *SnapshotTimePredicate) GetUbound() *SnapshotTime {
	if x != nil {
		return x.Ubound
	}
	return nil
}

type SnapshotTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  SnapshotTime_SnapshotTimeType `protobuf:"varint,1,opt,name=type,proto3,enum=qpu.SnapshotTime_SnapshotTimeType" json:"type,omitempty"`
	Value *Vectorclock                  `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// SnapshotTime is always used in ranges.
	// isClosed is used to signify if a range is open or closed.
	// E.g. (isClosed=true, isClosed=false) -> [SnapshotTime1, SnapshotTime2).
	IsClosed bool `protobuf:"varint,3,opt,name=isClosed,proto3" json:"isClosed,omitempty"`
}

func (x *SnapshotTime) Reset() {
	*x = SnapshotTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qpu_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapshotTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotTime) ProtoMessage() {}

func (x *SnapshotTime) ProtoReflect() protoreflect.Message {
	mi := &file_qpu_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotTime.ProtoReflect.Descriptor instead.
func (*SnapshotTime) Descriptor() ([]byte, []int) {
	return file_qpu_proto_rawDescGZIP(), []int{7}
}

func (x *SnapshotTime) GetType() SnapshotTime_SnapshotTimeType {
	if x != nil {
		return x.Type
	}
	return SnapshotTime_LATEST
}

func (x *SnapshotTime) GetValue() *Vectorclock {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *SnapshotTime) GetIsClosed() bool {
	if x != nil {
		return x.IsClosed
	}
	return false
}

type Vectorclock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vc map[string]*timestamp.Timestamp `protobuf:"bytes,1,rep,name=vc,proto3" json:"vc,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Vectorclock) Reset() {
	*x = Vectorclock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qpu_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vectorclock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vectorclock) ProtoMessage() {}

func (x *Vectorclock) ProtoReflect() protoreflect.Message {
	mi := &file_qpu_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vectorclock.ProtoReflect.Descriptor instead.
func (*Vectorclock) Descriptor() ([]byte, []int) {
	return file_qpu_proto_rawDescGZIP(), []int{8}
}

func (x *Vectorclock) GetVc() map[string]*timestamp.Timestamp {
	if x != nil {
		return x.Vc
	}
	return nil
}

type Payload_StateDelta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Old *ObjectState `protobuf:"bytes,1,opt,name=old,proto3" json:"old,omitempty"`
	New *ObjectState `protobuf:"bytes,2,opt,name=new,proto3" json:"new,omitempty"`
}

func (x *Payload_StateDelta) Reset() {
	*x = Payload_StateDelta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qpu_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payload_StateDelta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload_StateDelta) ProtoMessage() {}

func (x *Payload_StateDelta) ProtoReflect() protoreflect.Message {
	mi := &file_qpu_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload_StateDelta.ProtoReflect.Descriptor instead.
func (*Payload_StateDelta) Descriptor() ([]byte, []int) {
	return file_qpu_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Payload_StateDelta) GetOld() *ObjectState {
	if x != nil {
		return x.Old
	}
	return nil
}

func (x *Payload_StateDelta) GetNew() *ObjectState {
	if x != nil {
		return x.New
	}
	return nil
}

var File_qpu_proto protoreflect.FileDescriptor

var file_qpu_proto_rawDesc = []byte{
	0x0a, 0x09, 0x71, 0x70, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x71, 0x70, 0x75,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x9b, 0x01, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x2e, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x71, 0x70, 0x75,
	0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x26, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x71, 0x70, 0x75, 0x2e, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22,
	0xc1, 0x01, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x71, 0x70, 0x75,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x71, 0x70, 0x75, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x48, 0x00, 0x52,
	0x05, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x1a, 0x54, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x6c, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x03, 0x6f, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x71, 0x70, 0x75, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x03, 0x6f, 0x6c, 0x64, 0x12, 0x22, 0x0a, 0x03, 0x6e, 0x65, 0x77, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x71, 0x70, 0x75, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x03, 0x6e, 0x65, 0x77, 0x42, 0x05, 0x0a, 0x03,
	0x76, 0x61, 0x6c, 0x22, 0x9a, 0x01, 0x0a, 0x0b, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x71, 0x70, 0x75, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x49, 0x0a, 0x0f, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x71, 0x70, 0x75, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x48, 0x0a, 0x09, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x61, 0x74, 0x74, 0x72, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x74, 0x74, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x71, 0x70, 0x75, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4a, 0x0a, 0x05, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x03, 0x73, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x03, 0x73, 0x74, 0x72, 0x12, 0x12, 0x0a, 0x03, 0x69, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x03, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x03, 0x66,
	0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x03, 0x66, 0x6c, 0x74, 0x42,
	0x05, 0x0a, 0x03, 0x76, 0x61, 0x6c, 0x22, 0xfa, 0x01, 0x0a, 0x12, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a,
	0x04, 0x61, 0x74, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x71, 0x70,
	0x75, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x04, 0x61, 0x74, 0x74,
	0x72, 0x12, 0x39, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x25, 0x2e, 0x71, 0x70, 0x75, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x50,
	0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x06,
	0x6c, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x71,
	0x70, 0x75, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x6c, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x12, 0x22, 0x0a, 0x06, 0x75, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x71, 0x70, 0x75, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x75, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x22, 0x3d, 0x0a, 0x0d, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x53, 0x4e, 0x55, 0x4c, 0x4c, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x53, 0x4e, 0x4f, 0x54, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x01,
	0x12, 0x09, 0x0a, 0x05, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x02, 0x12, 0x06, 0x0a, 0x02, 0x45,
	0x51, 0x10, 0x03, 0x22, 0x6d, 0x0a, 0x15, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x06,
	0x6c, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x71,
	0x70, 0x75, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x06, 0x6c, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x75, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x71, 0x70, 0x75, 0x2e, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x06, 0x75, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x22, 0xce, 0x01, 0x0a, 0x0c, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x22, 0x2e, 0x71, 0x70, 0x75, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x71, 0x70, 0x75,
	0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x63, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x22,
	0x42, 0x0a, 0x10, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x41, 0x54, 0x45, 0x53, 0x54, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x5a, 0x45, 0x52, 0x4f, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x49, 0x4e, 0x46,
	0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x56, 0x45, 0x43, 0x54, 0x4f, 0x52, 0x43, 0x4c, 0x4f, 0x43,
	0x4b, 0x10, 0x03, 0x22, 0x8a, 0x01, 0x0a, 0x0b, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x63, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x28, 0x0a, 0x02, 0x76, 0x63, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x71, 0x70, 0x75, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x63, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x56, 0x63, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x02, 0x76, 0x63, 0x1a, 0x51, 0x0a,
	0x07, 0x56, 0x63, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64,
	0x76, 0x61, 0x73, 0x69, 0x6c, 0x61, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x75, 0x73, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x71,
	0x70, 0x75, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_qpu_proto_rawDescOnce sync.Once
	file_qpu_proto_rawDescData = file_qpu_proto_rawDesc
)

func file_qpu_proto_rawDescGZIP() []byte {
	file_qpu_proto_rawDescOnce.Do(func() {
		file_qpu_proto_rawDescData = protoimpl.X.CompressGZIP(file_qpu_proto_rawDescData)
	})
	return file_qpu_proto_rawDescData
}

var file_qpu_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_qpu_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_qpu_proto_goTypes = []interface{}{
	(AttributePredicate_PredicateType)(0), // 0: qpu.AttributePredicate.PredicateType
	(SnapshotTime_SnapshotTimeType)(0),    // 1: qpu.SnapshotTime.SnapshotTimeType
	(*LogOperation)(nil),                  // 2: qpu.LogOperation
	(*Payload)(nil),                       // 3: qpu.Payload
	(*ObjectState)(nil),                   // 4: qpu.ObjectState
	(*Attribute)(nil),                     // 5: qpu.Attribute
	(*Value)(nil),                         // 6: qpu.Value
	(*AttributePredicate)(nil),            // 7: qpu.AttributePredicate
	(*SnapshotTimePredicate)(nil),         // 8: qpu.SnapshotTimePredicate
	(*SnapshotTime)(nil),                  // 9: qpu.SnapshotTime
	(*Vectorclock)(nil),                   // 10: qpu.Vectorclock
	(*Payload_StateDelta)(nil),            // 11: qpu.Payload.StateDelta
	nil,                                   // 12: qpu.ObjectState.AttributesEntry
	nil,                                   // 13: qpu.Vectorclock.VcEntry
	(*timestamp.Timestamp)(nil),           // 14: google.protobuf.Timestamp
}
var file_qpu_proto_depIdxs = []int32{
	10, // 0: qpu.LogOperation.timestamp:type_name -> qpu.Vectorclock
	3,  // 1: qpu.LogOperation.payload:type_name -> qpu.Payload
	4,  // 2: qpu.Payload.state:type_name -> qpu.ObjectState
	11, // 3: qpu.Payload.delta:type_name -> qpu.Payload.StateDelta
	12, // 4: qpu.ObjectState.attributes:type_name -> qpu.ObjectState.AttributesEntry
	6,  // 5: qpu.Attribute.value:type_name -> qpu.Value
	5,  // 6: qpu.AttributePredicate.attr:type_name -> qpu.Attribute
	0,  // 7: qpu.AttributePredicate.type:type_name -> qpu.AttributePredicate.PredicateType
	6,  // 8: qpu.AttributePredicate.lbound:type_name -> qpu.Value
	6,  // 9: qpu.AttributePredicate.ubound:type_name -> qpu.Value
	9,  // 10: qpu.SnapshotTimePredicate.lbound:type_name -> qpu.SnapshotTime
	9,  // 11: qpu.SnapshotTimePredicate.ubound:type_name -> qpu.SnapshotTime
	1,  // 12: qpu.SnapshotTime.type:type_name -> qpu.SnapshotTime.SnapshotTimeType
	10, // 13: qpu.SnapshotTime.value:type_name -> qpu.Vectorclock
	13, // 14: qpu.Vectorclock.vc:type_name -> qpu.Vectorclock.VcEntry
	4,  // 15: qpu.Payload.StateDelta.old:type_name -> qpu.ObjectState
	4,  // 16: qpu.Payload.StateDelta.new:type_name -> qpu.ObjectState
	6,  // 17: qpu.ObjectState.AttributesEntry.value:type_name -> qpu.Value
	14, // 18: qpu.Vectorclock.VcEntry.value:type_name -> google.protobuf.Timestamp
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_qpu_proto_init() }
func file_qpu_proto_init() {
	if File_qpu_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_qpu_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qpu_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qpu_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qpu_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qpu_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qpu_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttributePredicate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qpu_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotTimePredicate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qpu_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapshotTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qpu_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vectorclock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qpu_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payload_StateDelta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_qpu_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Payload_State)(nil),
		(*Payload_Delta)(nil),
	}
	file_qpu_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*Value_Str)(nil),
		(*Value_Int)(nil),
		(*Value_Flt)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_qpu_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_qpu_proto_goTypes,
		DependencyIndexes: file_qpu_proto_depIdxs,
		EnumInfos:         file_qpu_proto_enumTypes,
		MessageInfos:      file_qpu_proto_msgTypes,
	}.Build()
	File_qpu_proto = out.File
	file_qpu_proto_rawDesc = nil
	file_qpu_proto_goTypes = nil
	file_qpu_proto_depIdxs = nil
}
